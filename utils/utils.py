import numpy as np
import pandas as pd
import requests
import copy
from datetime import datetime, timedelta


# def me(match, me):
#     if match['matchInfo'][0]['nickname'].lower() == me.lower() or len(match['matchInfo'][:])==1:
#         return match['matchInfo'][0]
#     else:
#         return match['matchInfo'][1]

# def you(match, me):
#     if match['matchInfo'][0]['nickname'].lower() != me.lower() or len(match['matchInfo'][:])==1:
#         return match['matchInfo'][0]
#     else:
#         return match['matchInfo'][1]

def me(match, me):
    me = me.replace(" ", "")  # 입력받은 닉네임에서 띄어쓰기 제거
    if match['matchInfo'][0]['nickname'].replace(" ", "").lower() == me.lower() or len(match['matchInfo'][:]) == 1:
        return match['matchInfo'][0]
    else:
        return match['matchInfo'][1]

def you(match, me):
    me = me.replace(" ", "")  # 입력받은 닉네임에서 띄어쓰기 제거
    if match['matchInfo'][0]['nickname'].replace(" ", "").lower() != me.lower() or len(match['matchInfo'][:]) == 1:
        return match['matchInfo'][0]
    else:
        return match['matchInfo'][1]

    
# def avg_data():
#     url = f"https://fconline.nexon.com/Datacenter/GetMatchRecord?strDate={datetime.now().strftime('%Y.%m.%d')}&n1Type=50&n4StartRanking=1&n4EndRanking=10000&rd=0.4988530727702105"
#     response = requests.get(url)
#     json_obj = response.json()
#     df = pd.DataFrame(json_obj)  # JSON 데이터를 DataFrame으로 변환
#     return df.iloc[-1, :]

def top_n_argmax(array, n):
    top_n_indices = []
    top_n_values = []
    arr = copy.deepcopy(array)
    for _ in range(n):
        max_index = np.nanargmax(arr)
        top_n_indices.append(max_index)
        top_n_values.append(arr[max_index])
        arr[max_index] = -np.inf
    return top_n_indices, top_n_values

def top_n_argmin(array, n):
    top_n_indices = []
    top_n_values = []
    arr = copy.deepcopy(array)
    for _ in range(n):
        min_index = np.nanargmin(arr)
        top_n_indices.append(min_index)
        top_n_values.append(arr[min_index])
        arr[min_index] = np.inf
    return top_n_indices, top_n_values


def calculate_time_difference(date_str):
    current_time = datetime.now()
    input_time = datetime.strptime(date_str, '%Y-%m-%dT%H:%M:%S')
    time_difference = current_time - input_time

    if time_difference < timedelta(days=1):
        hours_diff = int(time_difference.total_seconds() // 3600)
        minutes_diff = int((time_difference.total_seconds() % 3600) // 60)
        if hours_diff == 0:
            if minutes_diff <= 1:
                return "방금 전"
            else:
                return f"{minutes_diff}분 전"
        elif hours_diff == 1:
            return "1시간 전"
        else:
            return f"{hours_diff}시간 전"
    else:
        days_diff = time_difference.days
        if days_diff == 1:
            return "1일 전"
        else:
            return f"{days_diff}일 전"


def avg_data():
    # 미리 저장된 JSON 데이터를 불러옴
    data = {"lengthDate":30,"date":["2024-10-02T00:00:00","2024-10-03T00:00:00","2024-10-04T00:00:00","2024-10-05T00:00:00","2024-10-06T00:00:00","2024-10-07T00:00:00","2024-10-08T00:00:00","2024-10-09T00:00:00","2024-10-10T00:00:00","2024-10-11T00:00:00","2024-10-12T00:00:00","2024-10-13T00:00:00","2024-10-14T00:00:00","2024-10-15T00:00:00","2024-10-16T00:00:00","2024-10-17T00:00:00","2024-10-18T00:00:00","2024-10-19T00:00:00","2024-10-20T00:00:00","2024-10-21T00:00:00","2024-10-22T00:00:00","2024-10-23T00:00:00","2024-10-24T00:00:00","2024-10-25T00:00:00","2024-10-26T00:00:00","2024-10-27T00:00:00","2024-10-28T00:00:00","2024-10-29T00:00:00","2024-10-30T00:00:00","2024-10-31T00:00:00"],"count":[24754,38371,30012,31605,30599,23762,22369,30839,23089,24683,28538,27586,20649,19444,20172,42207,50171,47405,42951,33688,33730,33720,32141,34719,37568,36408,26820,26831,26166,25718],"avggoaltot":[2.60598,2.60103,2.59631,2.61946,2.60441,2.61136,2.58101,2.59696,2.60453,2.5969,2.60111,2.56735,2.60237,2.58692,2.55885,2.70467,2.68671,2.64699,2.62459,2.61659,2.61713,2.61701,2.62378,2.62502,2.62436,2.60832,2.60994,2.60229,2.60695,2.60048],"avgshoottot":[7.013,7.04606,7.01588,7.06386,7.04166,6.98815,6.97516,6.97468,6.99777,6.98004,6.97099,6.93041,6.99305,6.94499,6.88315,7.39099,7.28191,7.22329,7.17794,7.14001,7.15706,7.10282,7.093,7.13146,7.1065,7.09769,7.07931,7.02157,7.02128,7.01516],"avgeffshoottot":[5.32877,5.35841,5.33585,5.37693,5.36129,5.32432,5.30195,5.31462,5.32753,5.31175,5.30916,5.27581,5.33185,5.28569,5.25032,5.59971,5.54154,5.48954,5.46566,5.44519,5.44687,5.41903,5.41435,5.43385,5.42168,5.40256,5.39512,5.35671,5.35998,5.34814],"avggoalpenaltykick":[0.06395,0.0612,0.06384,0.06283,0.06352,0.06343,0.06261,0.06146,0.06129,0.06156,0.06257,0.06231,0.06247,0.0606,0.06213,0.06478,0.06312,0.06241,0.06078,0.06018,0.06033,0.06094,0.06312,0.06269,0.06271,0.06255,0.0637,0.06268,0.06338,0.06029],"avggoalfreekick":[0.01907,0.01807,0.0183,0.0182,0.01811,0.01869,0.01822,0.01906,0.01871,0.0175,0.01884,0.01904,0.01846,0.01942,0.01687,0.01813,0.01775,0.01741,0.01791,0.01744,0.01731,0.01823,0.0171,0.01784,0.01704,0.01804,0.01898,0.01735,0.01856,0.01696],"avgshootinpenalty":[4.62401,4.67982,4.66454,4.66644,4.62455,4.61528,4.59855,4.6239,4.64585,4.63644,4.6306,4.58571,4.6259,4.59486,4.55248,4.93432,4.85165,4.81926,4.75182,4.73295,4.73664,4.69588,4.70439,4.71811,4.71595,4.69999,4.67282,4.6556,4.66706,4.66933],"avggoalinpenalty":[2.0358,2.04546,2.04249,2.04473,2.02863,2.04791,2.01376,2.03437,2.04636,2.04417,2.04523,2.00858,2.03699,2.02742,2.01025,2.11768,2.10845,2.07998,2.05248,2.04918,2.04949,2.04976,2.06283,2.05552,2.06214,2.04802,2.04262,2.04401,2.05318,2.04844],"avgshootoutpenalty":[2.29833,2.27921,2.26113,2.30914,2.32882,2.28414,2.28781,2.26493,2.26456,2.2572,2.25207,2.25844,2.27995,2.26504,2.24167,2.36512,2.34097,2.31618,2.33987,2.32258,2.33443,2.32141,2.2994,2.32666,2.30224,2.30945,2.31728,2.27798,2.26579,2.26147],"avggoaloutpenalty":[0.50624,0.49437,0.48998,0.51191,0.51226,0.50001,0.50464,0.50113,0.49688,0.49117,0.49331,0.49646,0.50291,0.49889,0.48647,0.52221,0.51513,0.50461,0.51133,0.50722,0.50731,0.50631,0.49784,0.50681,0.49951,0.49774,0.50362,0.49559,0.49038,0.49176],"middleshoot":[22.0264,21.6904,21.6699,22.1688,21.9964,21.8907,22.0579,22.1256,21.9416,21.7601,21.9046,21.9827,22.0579,22.0257,21.7012,22.0796,22.005,21.7862,21.8531,21.8388,21.7317,21.8102,21.6508,21.7829,21.6966,21.5525,21.7333,21.7558,21.643,21.7452],"outpenaltygoalratio":[19.426,19.0067,18.8723,19.5425,19.6688,19.1477,19.5522,19.2967,19.0776,18.9136,18.9653,19.3376,19.3251,19.2852,19.0112,19.3077,19.1733,19.0634,19.4824,19.3849,19.3842,19.3467,18.974,19.3071,19.0336,19.083,19.2962,19.0445,18.8106,18.9104],"avggoalheading":[0.2596,0.26131,0.2644,0.26789,0.26633,0.25903,0.26151,0.26035,0.27352,0.26708,0.26994,0.27437,0.27259,0.27755,0.26653,0.26974,0.26804,0.26844,0.26324,0.26636,0.26903,0.26271,0.26233,0.25947,0.26521,0.26686,0.26798,0.27024,0.27251,0.27262],"goalheadingratio":[9.96187,10.0464,10.1835,10.227,10.226,9.91939,10.132,10.0251,10.5018,10.2847,10.3779,10.6868,10.4748,10.7289,10.4162,9.97328,9.97649,10.1412,10.0299,10.1797,10.2795,10.0384,9.99802,9.88451,10.1059,10.2309,10.2676,10.3846,10.4532,10.4833],"avgpasstry":[105.897,105.81,106.091,106.058,106.378,106.58,106.411,106.678,105.947,106.004,106.27,106.404,106.575,106.326,105.841,104.085,104.472,105.174,105.417,105.628,105.659,105.721,105.081,105.507,105.781,106.086,106.495,105.767,106.019,105.477],"avgpasssuccess":[95.9282,95.8486,96.0615,96.0698,96.4205,96.6393,96.4888,96.7046,95.97,96.1021,96.2969,96.4194,96.6542,96.4842,95.9273,93.7966,94.3213,95.0129,95.3042,95.6042,95.6428,95.7046,95.0914,95.4295,95.7074,95.9769,96.43,95.7758,96.0097,95.4949],"passsuccessratio":[90.5862,90.5859,90.5462,90.5819,90.6398,90.6731,90.6755,90.6508,90.583,90.659,90.6153,90.6164,90.6911,90.7437,90.633,90.1151,90.2839,90.3388,90.4069,90.5098,90.5206,90.5255,90.493,90.4484,90.4766,90.4711,90.5491,90.5534,90.5589,90.5362],"avgowngoal":[0.0178,0.0167,0.01795,0.02018,0.01772,0.01738,0.01737,0.01799,0.01751,0.0181,0.01803,0.01876,0.01815,0.0173,0.01913,0.0175,0.0155,0.01749,0.01708,0.01613,0.01761,0.01693,0.01843,0.01675,0.01693,0.01785,0.01719,0.01689,0.01827,0.01653],"avgpossession":[50.658,50.6454,50.6497,50.5931,50.6154,50.5955,50.6001,50.5512,50.6149,50.7036,50.5348,50.5492,50.5915,50.5787,50.5147,50.7866,50.8436,50.8217,50.7317,50.7525,50.7208,50.6609,50.7593,50.7059,50.7266,50.7067,50.766,50.6703,50.615,50.7179],"avgdribble":[73.158,73.1259,73.1382,73.1615,73.4761,73.5968,73.5555,73.6982,73.046,73.278,73.1941,73.344,73.3215,73.4348,73.2855,72.4168,72.4096,72.6823,72.6392,72.9379,72.8566,72.7727,72.4336,72.6483,73.0276,72.9731,73.3465,73.1336,73.0036,72.6223],"avgtacklesuccess":[6.09558,6.07587,6.04345,5.99241,6.02061,6.03888,6.03389,6.01355,6.08988,6.05171,6.06134,5.98833,6.00812,5.94724,5.96538,6.27185,6.21807,6.1261,6.08219,6.00835,5.98959,6.03587,6.0441,6.09142,6.08499,6.03858,5.99476,6.016,6.034,6.03551],"avgtackletry":[11.3713,11.2985,11.2963,11.1681,11.2515,11.2906,11.3011,11.2678,11.4043,11.3439,11.3214,11.2518,11.3416,11.2018,11.2064,11.602,11.5535,11.4064,11.3339,11.235,11.2351,11.3193,11.292,11.3936,11.3665,11.2946,11.2184,11.2864,11.2921,11.2906],"avgblocksuccess":[0.63328,0.62807,0.62845,0.63556,0.63564,0.63853,0.63365,0.63514,0.61598,0.61429,0.62621,0.63292,0.62829,0.63148,0.62816,0.63731,0.62455,0.64058,0.63432,0.64047,0.6327,0.63929,0.6216,0.63018,0.63117,0.62796,0.63662,0.62113,0.61907,0.628],"avgblocktry":[8.26758,8.24082,8.24414,8.30359,8.35732,8.30083,8.29208,8.28547,8.21402,8.20301,8.31504,8.26621,8.25627,8.27927,8.29407,8.21634,8.23242,8.28624,8.31697,8.26705,8.28442,8.33349,8.21604,8.2487,8.24819,8.27824,8.30113,8.20837,8.21881,8.18425],"avgfoul":[0.69417,0.69168,0.69552,0.68428,0.69578,0.68594,0.69667,0.6918,0.69573,0.69104,0.69969,0.69532,0.69954,0.68593,0.68705,0.70159,0.70543,0.69271,0.68856,0.68149,0.68039,0.69226,0.69632,0.68816,0.69438,0.68814,0.68536,0.69276,0.69004,0.69281],"avgshootfreekick":[0.18547,0.18122,0.1791,0.18074,0.18282,0.1854,0.18109,0.17939,0.18309,0.18297,0.18285,0.18052,0.17989,0.17526,0.17424,0.17842,0.18012,0.17701,0.17035,0.17795,0.17542,0.18019,0.17962,0.17964,0.1787,0.18019,0.18217,0.18045,0.18213,0.18002],"avgshootpenaltykick":[0.08321,0.07969,0.08248,0.08135,0.08113,0.08075,0.08145,0.07893,0.08001,0.0792,0.08131,0.07956,0.08024,0.07771,0.08129,0.08332,0.08195,0.08053,0.0791,0.07775,0.07867,0.07869,0.08158,0.07942,0.08024,0.08024,0.08143,0.08041,0.08077,0.07744],"avgshootheading":[0.88171,0.89152,0.89399,0.90018,0.89198,0.86844,0.88622,0.88256,0.92111,0.8985,0.89858,0.9174,0.90916,0.91525,0.88832,0.94708,0.9368,0.93759,0.91677,0.92328,0.92275,0.90894,0.90439,0.90619,0.90624,0.91911,0.91826,0.92275,0.92766,0.92991],"avgshortpasstry":[77.2107,77.1572,77.3847,77.4284,77.8719,77.9668,77.856,78.0356,77.1305,77.4754,77.6701,77.8134,78.2766,77.9898,77.4048,74.4723,74.9842,75.7828,76.0886,76.5334,76.5692,76.5958,76.2671,76.6072,76.6386,76.9088,77.4902,76.8879,76.9869,76.5075],"avgshortpasssuccess":[73.4493,73.3989,73.6169,73.6658,74.1034,74.2202,74.1189,74.2564,73.3855,73.7596,73.9115,74.0469,74.4989,74.2726,73.6638,70.7691,71.2997,72.0736,72.3836,72.8525,72.8868,72.8994,72.5498,72.8515,72.9106,73.159,73.7392,73.1801,73.2846,72.8158],"avglobpasstry":[4.58606,4.58751,4.61395,4.61329,4.59953,4.58224,4.59035,4.57426,4.6147,4.6052,4.61287,4.67758,4.63798,4.6992,4.66287,4.76292,4.6742,4.74605,4.72091,4.75298,4.76432,4.70813,4.63658,4.65585,4.7187,4.79267,4.79639,4.76924,4.80834,4.79556],"avglobpasssuccess":[2.59897,2.58926,2.59072,2.58759,2.59046,2.57977,2.58433,2.57277,2.62158,2.60179,2.61142,2.64562,2.61863,2.66906,2.65061,2.59973,2.58859,2.63302,2.63279,2.66187,2.68114,2.63714,2.58921,2.60298,2.65715,2.70887,2.71839,2.70035,2.72269,2.73476],"avgdrivengroundpasstry":[3.75028,3.65163,3.68366,3.68336,3.74065,3.76127,3.78437,3.68804,3.87516,3.69055,3.69305,3.64562,3.6633,3.72798,3.65484,3.34087,3.44942,3.4959,3.5376,3.55561,3.61621,3.65526,3.68625,3.61583,3.73956,3.6839,3.68331,3.67228,3.68957,3.79863],"avgdrivengroundpasssuccess":[3.228,3.13617,3.16094,3.16376,3.21993,3.23909,3.26742,3.17491,3.34513,3.17014,3.17411,3.14513,3.15898,3.22588,3.14536,2.86351,2.95388,2.99803,3.03576,3.06333,3.11367,3.15126,3.18107,3.10252,3.21631,3.17214,3.17788,3.16382,3.18148,3.27846],"avgthroughpasstry":[19.0512,19.1246,19.1156,19.0478,18.8803,18.9832,18.8958,19.0886,19.0245,18.9564,18.9925,18.9741,18.7186,18.6341,18.8301,20.1436,20.0153,19.8152,19.7462,19.4519,19.383,19.4527,19.1904,19.3336,19.3734,19.3855,19.2118,19.1395,19.2327,19.0731],"avgthroughpasssuccess":[16.3602,16.4425,16.4046,16.3699,16.2285,16.3168,16.2351,16.4186,16.3324,16.2932,16.3083,16.2993,16.0958,16.0306,16.187,17.2401,17.1654,16.9963,16.9432,16.7109,16.6457,16.7131,16.4797,16.5833,16.6269,16.6416,16.4988,16.4411,16.532,16.3655],"avglobbedthroughpasstry":[0.2768,0.2676,0.27401,0.26673,0.25942,0.27071,0.2576,0.27307,0.2633,0.25414,0.272,0.26261,0.25369,0.26438,0.25528,0.33423,0.31538,0.30923,0.30365,0.30721,0.30456,0.28756,0.27589,0.27569,0.28609,0.28218,0.28054,0.27752,0.26506,0.27579],"avglobbedthroughpasssuccess":[0.1757,0.1689,0.17431,0.1681,0.16302,0.17007,0.1656,0.17441,0.16684,0.16105,0.1734,0.16733,0.16212,0.16719,0.16345,0.21298,0.20402,0.20074,0.19691,0.19808,0.1985,0.1879,0.17354,0.17493,0.18171,0.17994,0.17616,0.17531,0.16762,0.17488],"avgcornerkick":[1.74779,1.76734,1.76158,1.78079,1.76246,1.76786,1.76168,1.74669,1.74774,1.76584,1.7534,1.75346,1.74842,1.74214,1.74353,1.83905,1.80743,1.8072,1.80038,1.79387,1.80311,1.78514,1.77797,1.79265,1.77932,1.78457,1.77221,1.76529,1.76593,1.75835],"avgycards":[0.04709,0.04525,0.04657,0.04324,0.04234,0.04344,0.04303,0.0455,0.04425,0.04469,0.04526,0.04188,0.0424,0.04433,0.04416,0.05191,0.05145,0.05136,0.04685,0.04431,0.04335,0.04599,0.0468,0.04707,0.0473,0.04697,0.04418,0.04302,0.04436,0.04391],"avgrcards":[0.00731,0.00672,0.00777,0.00681,0.00739,0.00745,0.00667,0.00704,0.00794,0.00745,0.00675,0.00702,0.00692,0.00662,0.00759,0.0078,0.00847,0.00808,0.00706,0.00736,0.00715,0.00746,0.00721,0.00717,0.00773,0.00703,0.00698,0.00647,0.00685,0.00757],"avginjury":[0.11716,0.11405,0.11526,0.11637,0.11593,0.11743,0.11522,0.1146,0.11591,0.11668,0.11497,0.11729,0.11481,0.11558,0.11575,0.12091,0.11952,0.1183,0.11762,0.11488,0.11489,0.11287,0.1129,0.11504,0.1181,0.11619,0.11699,0.11265,0.11415,0.11562],"avgoffsidecnt":[0.51573,0.5163,0.51765,0.51283,0.51239,0.51217,0.51493,0.51507,0.51208,0.5153,0.51753,0.51301,0.5069,0.51166,0.51563,0.53816,0.52564,0.52222,0.5233,0.52187,0.5162,0.5246,0.52366,0.52204,0.52421,0.5168,0.52304,0.51763,0.51746,0.52272],"avgavgrating":[4.20924,4.20493,4.20502,4.2041,4.20213,4.1956,4.19158,4.19764,4.18976,4.19702,4.19189,4.19424,4.1931,4.18761,4.18635,4.24361,4.23537,4.22815,4.22136,4.21449,4.21459,4.20788,4.21442,4.21293,4.21461,4.21217,4.21186,4.20665,4.20176,4.206]}
    # 데이터를 DataFrame으로 변환
    df = pd.DataFrame(data)
    
    # 마지막 행 반환
    return df.iloc[-1, :]
