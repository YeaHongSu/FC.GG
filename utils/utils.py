import numpy as np
import pandas as pd
import requests
import copy
from datetime import datetime, timedelta


# def me(match, me):
#     if match['matchInfo'][0]['nickname'].lower() == me.lower() or len(match['matchInfo'][:])==1:
#         return match['matchInfo'][0]
#     else:
#         return match['matchInfo'][1]

# def you(match, me):
#     if match['matchInfo'][0]['nickname'].lower() != me.lower() or len(match['matchInfo'][:])==1:
#         return match['matchInfo'][0]
#     else:
#         return match['matchInfo'][1]

def me(match, me):
    me = me.replace(" ", "")  # 입력받은 닉네임에서 띄어쓰기 제거
    if match['matchInfo'][0]['nickname'].replace(" ", "").lower() == me.lower() or len(match['matchInfo'][:]) == 1:
        return match['matchInfo'][0]
    else:
        return match['matchInfo'][1]

def you(match, me):
    me = me.replace(" ", "")  # 입력받은 닉네임에서 띄어쓰기 제거
    if match['matchInfo'][0]['nickname'].replace(" ", "").lower() != me.lower() or len(match['matchInfo'][:]) == 1:
        return match['matchInfo'][0]
    else:
        return match['matchInfo'][1]

    
# def avg_data():
#     url = f"https://fconline.nexon.com/Datacenter/GetMatchRecord?strDate={datetime.now().strftime('%Y.%m.%d')}&n1Type=50&n4StartRanking=1&n4EndRanking=10000&rd=0.4988530727702105"
#     response = requests.get(url)
#     json_obj = response.json()
#     df = pd.DataFrame(json_obj)  # JSON 데이터를 DataFrame으로 변환
#     return df.iloc[-1, :]

def top_n_argmax(array, n):
    top_n_indices = []
    top_n_values = []
    arr = copy.deepcopy(array)
    for _ in range(n):
        max_index = np.nanargmax(arr)
        top_n_indices.append(max_index)
        top_n_values.append(arr[max_index])
        arr[max_index] = -np.inf
    return top_n_indices, top_n_values

def top_n_argmin(array, n):
    top_n_indices = []
    top_n_values = []
    arr = copy.deepcopy(array)
    for _ in range(n):
        min_index = np.nanargmin(arr)
        top_n_indices.append(min_index)
        top_n_values.append(arr[min_index])
        arr[min_index] = np.inf
    return top_n_indices, top_n_values


def calculate_time_difference(date_str):
    current_time = datetime.now()
    input_time = datetime.strptime(date_str, '%Y-%m-%dT%H:%M:%S')
    time_difference = current_time - input_time

    if time_difference < timedelta(days=1):
        hours_diff = int(time_difference.total_seconds() // 3600)
        minutes_diff = int((time_difference.total_seconds() % 3600) // 60)
        if hours_diff == 0:
            if minutes_diff <= 1:
                return "방금 전"
            else:
                return f"{minutes_diff}분 전"
        elif hours_diff == 1:
            return "1시간 전"
        else:
            return f"{hours_diff}시간 전"
    else:
        days_diff = time_difference.days
        if days_diff == 1:
            return "1일 전"
        else:
            return f"{days_diff}일 전"


def avg_data():
    # 미리 저장된 JSON 데이터를 불러옴
    data = {"lengthDate":30,"date":["2024-09-18T00:00:00","2024-09-19T00:00:00","2024-09-20T00:00:00","2024-09-21T00:00:00","2024-09-22T00:00:00","2024-09-23T00:00:00","2024-09-24T00:00:00","2024-09-25T00:00:00","2024-09-26T00:00:00","2024-09-27T00:00:00","2024-09-28T00:00:00","2024-09-29T00:00:00","2024-09-30T00:00:00","2024-10-01T00:00:00","2024-10-02T00:00:00","2024-10-03T00:00:00","2024-10-04T00:00:00","2024-10-05T00:00:00","2024-10-06T00:00:00","2024-10-07T00:00:00","2024-10-08T00:00:00","2024-10-09T00:00:00","2024-10-10T00:00:00","2024-10-11T00:00:00","2024-10-12T00:00:00","2024-10-13T00:00:00","2024-10-14T00:00:00","2024-10-15T00:00:00","2024-10-16T00:00:00","2024-10-17T00:00:00"],"count":[30782,51334,48476,49106,45077,31497,30440,30213,28251,32711,36294,34910,25502,34378,24754,38371,30012,31605,30599,23762,22369,30839,23089,24683,28538,27586,20649,19444,20172,42207],"avggoaltot":[2.51936,2.62391,2.62259,2.59812,2.57438,2.56345,2.55429,2.55114,2.58087,2.58423,2.59319,2.5926,2.59949,2.62235,2.60598,2.60103,2.59631,2.61946,2.60441,2.61136,2.58101,2.59696,2.60453,2.5969,2.60111,2.56735,2.60237,2.58692,2.55885,2.70467],"avgshoottot":[6.87476,7.19517,7.12472,7.10484,7.03197,6.99438,6.97506,6.9425,6.98344,6.98368,7.00624,6.98495,6.96912,7.03555,7.013,7.04606,7.01588,7.06386,7.04166,6.98815,6.97516,6.97468,6.99777,6.98004,6.97099,6.93041,6.99305,6.94499,6.88315,7.39099],"avgeffshoottot":[5.2276,5.42979,5.39912,5.37609,5.33475,5.29663,5.28718,5.25872,5.30641,5.30155,5.3292,5.31469,5.30553,5.34975,5.32877,5.35841,5.33585,5.37693,5.36129,5.32432,5.30195,5.31462,5.32753,5.31175,5.30916,5.27581,5.33185,5.28569,5.25032,5.59971],"avggoalpenaltykick":[0.0628,0.06432,0.06539,0.0637,0.0618,0.06288,0.06459,0.06163,0.06095,0.06385,0.06395,0.06358,0.06316,0.06257,0.06395,0.0612,0.06384,0.06283,0.06352,0.06343,0.06261,0.06146,0.06129,0.06156,0.06257,0.06231,0.06247,0.0606,0.06213,0.06478],"avggoalfreekick":[0.01675,0.01668,0.01704,0.01799,0.01788,0.01831,0.01726,0.01886,0.01909,0.01779,0.01779,0.01744,0.01786,0.01782,0.01907,0.01807,0.0183,0.0182,0.01811,0.01869,0.01822,0.01906,0.01871,0.0175,0.01884,0.01904,0.01846,0.01942,0.01687,0.01813],"avgshootinpenalty":[4.55228,4.79022,4.7382,4.70053,4.65909,4.62787,4.6,4.59605,4.65876,4.64091,4.63659,4.63415,4.65773,4.66396,4.62401,4.67982,4.66454,4.66644,4.62455,4.61528,4.59855,4.6239,4.64585,4.63644,4.6306,4.58571,4.6259,4.59486,4.55248,4.93432],"avggoalinpenalty":[1.98015,2.05792,2.05577,2.03605,2.02213,2.00712,2.00139,2.0,2.03485,2.02915,2.03289,2.03527,2.05334,2.05271,2.0358,2.04546,2.04249,2.04473,2.02863,2.04791,2.01376,2.03437,2.04636,2.04417,2.04523,2.00858,2.03699,2.02742,2.01025,2.11768],"avgshootoutpenalty":[2.23491,2.31374,2.29473,2.31373,2.28634,2.27783,2.28476,2.2582,2.23861,2.25363,2.28005,2.26055,2.22174,2.28365,2.29833,2.27921,2.26113,2.30914,2.32882,2.28414,2.28781,2.26493,2.26456,2.2572,2.25207,2.25844,2.27995,2.26504,2.24167,2.36512],"avggoaloutpenalty":[0.47641,0.50167,0.50144,0.49838,0.49045,0.49345,0.48831,0.48951,0.48507,0.49123,0.49635,0.49376,0.483,0.50708,0.50624,0.49437,0.48998,0.51191,0.51226,0.50001,0.50464,0.50113,0.49688,0.49117,0.49331,0.49646,0.50291,0.49889,0.48647,0.52221],"middleshoot":[21.3168,21.6823,21.8518,21.5401,21.4515,21.663,21.3723,21.677,21.6684,21.7971,21.7691,21.8425,21.7397,22.2046,22.0264,21.6904,21.6699,22.1688,21.9964,21.8907,22.0579,22.1256,21.9416,21.7601,21.9046,21.9827,22.0579,22.0257,21.7012,22.0796],"outpenaltygoalratio":[18.91,19.1192,19.12,19.1824,19.0513,19.2494,19.1172,19.1879,18.7948,19.0086,19.1404,19.045,18.5806,19.3367,19.426,19.0067,18.8723,19.5425,19.6688,19.1477,19.5522,19.2967,19.0776,18.9136,18.9653,19.3376,19.3251,19.2852,19.0112,19.3077],"avggoalheading":[0.24607,0.25149,0.24922,0.24781,0.25121,0.25634,0.25257,0.24935,0.26125,0.25169,0.25149,0.25764,0.26408,0.26478,0.2596,0.26131,0.2644,0.26789,0.26633,0.25903,0.26151,0.26035,0.27352,0.26708,0.26994,0.27437,0.27259,0.27755,0.26653,0.26974],"goalheadingratio":[9.76711,9.58446,9.50276,9.5382,9.758,9.99982,9.88813,9.77388,10.1226,9.73939,9.69793,9.93733,10.1589,10.097,9.96187,10.0464,10.1835,10.227,10.226,9.91939,10.132,10.0251,10.5018,10.2847,10.3779,10.6868,10.4748,10.7289,10.4162,9.97328],"avgpasstry":[107.246,104.703,104.794,105.421,105.727,105.913,105.521,105.569,105.838,105.559,105.774,105.921,106.078,106.428,105.897,105.81,106.091,106.058,106.378,106.58,106.411,106.678,105.947,106.004,106.27,106.404,106.575,106.326,105.841,104.085],"avgpasssuccess":[97.2831,94.4282,94.6983,95.373,95.7315,95.955,95.6079,95.6564,95.8802,95.6151,95.811,95.9269,96.036,96.4325,95.9282,95.8486,96.0615,96.0698,96.4205,96.6393,96.4888,96.7046,95.97,96.1021,96.2969,96.4194,96.6542,96.4842,95.9273,93.7966],"passsuccessratio":[90.71,90.1864,90.366,90.4686,90.5458,90.5976,90.6055,90.6102,90.5916,90.5802,90.5812,90.5644,90.5332,90.6083,90.5862,90.5859,90.5462,90.5819,90.6398,90.6731,90.6755,90.6508,90.583,90.659,90.6153,90.6164,90.6911,90.7437,90.633,90.1151],"avgowngoal":[0.01803,0.01605,0.01703,0.01838,0.01835,0.01578,0.01813,0.01671,0.01755,0.01803,0.01746,0.01724,0.01775,0.01823,0.0178,0.0167,0.01795,0.02018,0.01772,0.01738,0.01737,0.01799,0.01751,0.0181,0.01803,0.01876,0.01815,0.0173,0.01913,0.0175],"avgpossession":[50.5423,50.7919,50.8124,50.7775,50.7496,50.7986,50.7815,50.7183,50.847,50.7856,50.8147,50.7376,50.6869,50.6469,50.658,50.6454,50.6497,50.5931,50.6154,50.5955,50.6001,50.5512,50.6149,50.7036,50.5348,50.5492,50.5915,50.5787,50.5147,50.7866],"avgdribble":[74.0351,72.5053,72.5236,72.7691,73.0305,73.2088,73.0343,72.943,73.0921,73.1073,73.2148,73.2837,73.2854,73.4424,73.158,73.1259,73.1382,73.1615,73.4761,73.5968,73.5555,73.6982,73.046,73.278,73.1941,73.344,73.3215,73.4348,73.2855,72.4168],"avgtacklesuccess":[5.97357,6.22768,6.18035,6.13161,6.0334,5.98869,6.02839,6.04173,6.07666,6.10937,6.10643,6.06374,6.12946,6.09547,6.09558,6.07587,6.04345,5.99241,6.02061,6.03888,6.03389,6.01355,6.08988,6.05171,6.06134,5.98833,6.00812,5.94724,5.96538,6.27185],"avgtackletry":[11.1914,11.4944,11.4575,11.3817,11.2314,11.1446,11.2131,11.2489,11.2589,11.3469,11.3336,11.2929,11.4254,11.3528,11.3713,11.2985,11.2963,11.1681,11.2515,11.2906,11.3011,11.2678,11.4043,11.3439,11.3214,11.2518,11.3416,11.2018,11.2064,11.602],"avgblocksuccess":[0.63024,0.62364,0.61859,0.63066,0.63059,0.62706,0.6224,0.61956,0.61506,0.62098,0.61831,0.62915,0.62696,0.62251,0.63328,0.62807,0.62845,0.63556,0.63564,0.63853,0.63365,0.63514,0.61598,0.61429,0.62621,0.63292,0.62829,0.63148,0.62816,0.63731],"avgblocktry":[8.30012,8.12011,8.10967,8.19923,8.20617,8.14778,8.12893,8.13284,8.13196,8.17095,8.19821,8.2436,8.18425,8.22911,8.26758,8.24082,8.24414,8.30359,8.35732,8.30083,8.29208,8.28547,8.21402,8.20301,8.31504,8.26621,8.25627,8.27927,8.29407,8.21634],"avgfoul":[0.6869,0.69893,0.69462,0.69806,0.68143,0.68334,0.69218,0.69981,0.69788,0.70391,0.69736,0.69613,0.69754,0.69124,0.69417,0.69168,0.69552,0.68428,0.69578,0.68594,0.69667,0.6918,0.69573,0.69104,0.69969,0.69532,0.69954,0.68593,0.68705,0.70159],"avgshootfreekick":[0.17648,0.17662,0.17733,0.17832,0.17748,0.17964,0.18281,0.18521,0.17837,0.18329,0.18202,0.17759,0.18336,0.17718,0.18547,0.18122,0.1791,0.18074,0.18282,0.1854,0.18109,0.17939,0.18309,0.18297,0.18285,0.18052,0.17989,0.17526,0.17424,0.17842],"avgshootpenaltykick":[0.08016,0.08344,0.08448,0.08304,0.07913,0.08119,0.08251,0.08089,0.0793,0.08146,0.08213,0.0824,0.08185,0.08017,0.08321,0.07969,0.08248,0.08135,0.08113,0.08075,0.08145,0.07893,0.08001,0.0792,0.08131,0.07956,0.08024,0.07771,0.08129,0.08332],"avgshootheading":[0.85811,0.8884,0.87341,0.87627,0.87786,0.87477,0.86497,0.86799,0.89601,0.86976,0.868,0.86824,0.88862,0.89363,0.88171,0.89152,0.89399,0.90018,0.89198,0.86844,0.88622,0.88256,0.92111,0.8985,0.89858,0.9174,0.90916,0.91525,0.88832,0.94708],"avgshortpasstry":[79.0353,75.6945,75.9845,76.7951,77.1612,77.4391,77.1113,77.1882,77.2339,76.9627,77.1799,77.2227,77.2436,77.8173,77.2107,77.1572,77.3847,77.4284,77.8719,77.9668,77.856,78.0356,77.1305,77.4754,77.6701,77.8134,78.2766,77.9898,77.4048,74.4723],"avgshortpasssuccess":[75.2185,71.8979,72.2195,73.023,73.3947,73.6817,73.3768,73.4467,73.4712,73.2146,73.4248,73.4496,73.4635,74.0427,73.4493,73.3989,73.6169,73.6658,74.1034,74.2202,74.1189,74.2564,73.3855,73.7596,73.9115,74.0469,74.4989,74.2726,73.6638,70.7691],"avglobpasstry":[4.54589,4.5613,4.50095,4.50738,4.50057,4.51512,4.49098,4.47513,4.55487,4.53423,4.57222,4.54547,4.57012,4.57986,4.58606,4.58751,4.61395,4.61329,4.59953,4.58224,4.59035,4.57426,4.6147,4.6052,4.61287,4.67758,4.63798,4.6992,4.66287,4.76292],"avglobpasssuccess":[2.57875,2.4785,2.49169,2.49838,2.50901,2.52728,2.51571,2.50863,2.57271,2.56668,2.56983,2.55901,2.57071,2.56794,2.59897,2.58926,2.59072,2.58759,2.59046,2.57977,2.58433,2.57277,2.62158,2.60179,2.61142,2.64562,2.61863,2.66906,2.65061,2.59973],"avgdrivengroundpasstry":[3.66309,3.31645,3.47012,3.43313,3.59813,3.67265,3.70068,3.72564,3.72511,3.74171,3.68973,3.76619,3.72078,3.56908,3.75028,3.65163,3.68366,3.68336,3.74065,3.76127,3.78437,3.68804,3.87516,3.69055,3.69305,3.64562,3.6633,3.72798,3.65484,3.34087],"avgdrivengroundpasssuccess":[3.14321,2.83609,2.97529,2.93523,3.08752,3.16176,3.18255,3.20462,3.20498,3.22103,3.17533,3.23814,3.20047,3.06313,3.228,3.13617,3.16094,3.16376,3.21993,3.23909,3.26742,3.17491,3.34513,3.17014,3.17411,3.14513,3.15898,3.22588,3.14536,2.86351],"avgthroughpasstry":[18.6976,19.7783,19.5243,19.3714,19.1661,18.9906,18.9419,18.8851,19.0379,19.018,19.0342,19.0934,19.2391,19.1759,19.0512,19.1246,19.1156,19.0478,18.8803,18.9832,18.8958,19.0886,19.0245,18.9564,18.9925,18.9741,18.7186,18.6341,18.8301,20.1436],"avgthroughpasssuccess":[16.0514,16.8977,16.7089,16.6139,16.4421,16.2952,16.2513,16.2099,16.3433,16.3236,16.3534,16.3899,16.5167,16.4792,16.3602,16.4425,16.4046,16.3699,16.2285,16.3168,16.2351,16.4186,16.3324,16.2932,16.3083,16.2993,16.0958,16.0306,16.187,17.2401],"avglobbedthroughpasstry":[0.27074,0.34031,0.31187,0.30346,0.29099,0.28439,0.27251,0.27092,0.27062,0.26952,0.27647,0.2765,0.27032,0.26556,0.2768,0.2676,0.27401,0.26673,0.25942,0.27071,0.2576,0.27307,0.2633,0.25414,0.272,0.26261,0.25369,0.26438,0.25528,0.33423],"avglobbedthroughpasssuccess":[0.17263,0.20849,0.19505,0.19219,0.18401,0.17667,0.17098,0.17077,0.17075,0.17007,0.17432,0.1753,0.16876,0.16901,0.1757,0.1689,0.17431,0.1681,0.16302,0.17007,0.1656,0.17441,0.16684,0.16105,0.1734,0.16733,0.16212,0.16719,0.16345,0.21298],"avgcornerkick":[1.74834,1.78048,1.76298,1.77212,1.75962,1.75225,1.74196,1.73267,1.74205,1.74086,1.76122,1.74946,1.74254,1.7458,1.74779,1.76734,1.76158,1.78079,1.76246,1.76786,1.76168,1.74669,1.74774,1.76584,1.7534,1.75346,1.74842,1.74214,1.74353,1.83905],"avgycards":[0.04165,0.05354,0.05125,0.05197,0.04627,0.04611,0.04494,0.0465,0.04631,0.04613,0.04647,0.04663,0.04438,0.04559,0.04709,0.04525,0.04657,0.04324,0.04234,0.04344,0.04303,0.0455,0.04425,0.04469,0.04526,0.04188,0.0424,0.04433,0.04416,0.05191],"avgrcards":[0.00718,0.008,0.00858,0.00796,0.00774,0.00684,0.00824,0.00687,0.00652,0.0075,0.00739,0.00698,0.00718,0.00735,0.00731,0.00672,0.00777,0.00681,0.00739,0.00745,0.00667,0.00704,0.00794,0.00745,0.00675,0.00702,0.00692,0.00662,0.00759,0.0078],"avginjury":[0.11442,0.11846,0.12038,0.11874,0.11647,0.11254,0.11543,0.11594,0.11417,0.11466,0.11604,0.11425,0.11679,0.11714,0.11716,0.11405,0.11526,0.11637,0.11593,0.11743,0.11522,0.1146,0.11591,0.11668,0.11497,0.11729,0.11481,0.11558,0.11575,0.12091],"avgoffsidecnt":[0.51456,0.5403,0.53089,0.52369,0.51538,0.51977,0.51364,0.52317,0.52391,0.52035,0.51665,0.51575,0.52714,0.51884,0.51573,0.5163,0.51765,0.51283,0.51239,0.51217,0.51493,0.51507,0.51208,0.5153,0.51753,0.51301,0.5069,0.51166,0.51563,0.53816],"avgavgrating":[4.19427,4.23422,4.22723,4.22609,4.21653,4.21446,4.2028,4.20054,4.20808,4.205,4.2113,4.20877,4.2084,4.20494,4.20924,4.20493,4.20502,4.2041,4.20213,4.1956,4.19158,4.19764,4.18976,4.19702,4.19189,4.19424,4.1931,4.18761,4.18635,4.24361]}
    # 데이터를 DataFrame으로 변환
    df = pd.DataFrame(data)
    
    # 마지막 행 반환
    return df.iloc[-1, :]
